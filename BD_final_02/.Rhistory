nc <- NbClust(dataset, distance="euclidean",
min.nc=2, max.nc=15, method="average")
install.packages("yaml")        # Convert between R and YAML (XML like language).
install.packages("knitr")       # Dynamic Report Generation.
install.packages("cluster")     # Ref. [Maechler, 2018].
install.packages("NbClust")     # Ref. [Charrad, 2014].
library(yaml)
library(knitr)
library(cluster)
library(NbClust)
library(flexclust)
library(flexclust)
dataset <-  read.csv("online_shoppers_intention.csv")
setwd("~/Downloads/bd_final/BD_final_02")
dataset <-  read.csv("online_shoppers_intention.csv")
dataset$Month = factor(dataset$Month,
levels = c('Feb', 'Mar', 'May', 'June', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'),
labels = c(2, 3, 5, 6, 7, 8, 9, 10, 11, 12))
dataset$VisitorType = factor(dataset$VisitorType,
levels = c('New_Visitor', 'Other', 'Returning_Visitor'),
labels = c(1, 2, 3))
dataset$Weekend = factor(dataset$Weekend,
levels = c('FALSE', 'TRUE'),
labels = c(0, 1))
dataset$Revenue = factor(dataset$Revenue,
levels = c('FALSE', 'TRUE'),
labels = c(0, 1))
nc <- NbClust(dataset, distance="euclidean",
min.nc=2, max.nc=15, method="average")
dataset <-  read.csv("online_shoppers_intention.csv")
dataset <-  read.csv("online_shoppers_intention.csv")
library(knitr)
library(ggplot2)
library(ggExtra)
install.packages("ggExtra")
library(ggExtra)
library(yaml)
theme_set(theme_bw())  # pre-set the bw theme.
mpg_select <- dataset
g <- ggplot(mpg, aes(cty, hwy)) +
geom_count() +
geom_smooth(method="lm", se=F)
ggMarginal(g, type = "histogram", fill="transparent")
ggMarginal(g, type = "boxplot", fill="transparent")
g <- ggplot(mpg, aes(cty, hwy)) +
geom_count() +
geom_smooth(method="lm", se=F)
ggMarginal(g, type = "histogram", fill="transparent")
ggMarginal(g, type = "boxplot", fill="transparent")
library(ggplot2)
library(ggdendro)
theme_set(theme_bw())
hc <- hclust(dist(dataset), "ave")  # hierarchical clustering
hc <- hclust(dist(dataset), "ave")  # hierarchical clustering
ggdendrogram(hc, rotate = TRUE, size = 2)
ggdendrogram(hc, rotate = FALSE, size = 10)
ggdendrogram(hc, rotate = FALSE, size = 2)
View(g)
dataset$Month = factor(dataset$Month,
levels = c('Feb', 'Mar', 'May', 'June', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'),
labels = c(2, 3, 5, 6, 7, 8, 9, 10, 11, 12))
dataset$VisitorType = factor(dataset$VisitorType,
levels = c('New_Visitor', 'Other', 'Returning_Visitor'),
labels = c(1, 2, 3))
dataset$Weekend = factor(dataset$Weekend,
levels = c('FALSE', 'TRUE'),
labels = c(0, 1))
dataset$Revenue = factor(dataset$Revenue,
levels = c('FALSE', 'TRUE'),
labels = c(0, 1))
dataset_lm <- lm(Revenue ~ Administrative + Administrative_Duration +
Informational + Informational_Duration +
ProductRelated + ProductRelated_Duration +
BounceRates + ExitRates + PageValues +
SpecialDay + Month + OperatingSystems +
Browser + Region + TrafficType + VisitorType +
Weekend,
data = dataset)
library(ggplot2)
library(visreg)
install.packages('visreg')
library(visreg)
visreg(dataset_lm, "Region", gg = TRUE)
visreg(dataset_lm, "Region", gg = TRUE)
visreg(dataset_lm, "livingArea", gg = TRUE)
visreg(dataset_lm, "OperatingSystems", gg = TRUE)
visreg(dataset_lm, "Revenue", gg = TRUE)
g <- ggplot(dataset, aes(cty, hwy)) +
geom_count() +
geom_smooth(method="lm", se=F)
ggMarginal(g, type = "histogram", fill="transparent")
g <- ggplot(dataset, aes(Region, Revenue)) +
geom_count() +
geom_smooth(method="lm", se=F)
ggMarginal(g, type = "histogram", fill="transparent")
dataset <-  read.csv("online_shoppers_intention.csv")
g <- ggplot(dataset, aes(Month, Revenue)) +
geom_count() +
geom_smooth(method="lm", se=F)
ggMarginal(g, type = "histogram", fill="transparent")
ggMarginal(g, type = "boxplot", fill="transparent")
ggMarginal(g, type = "boxplot", fill="transparent")
pdf("Fig_4_2_Scatter.pdf")
ggMarginal(g, type = "histogram", fill="transparent")
ggMarginal(g, type = "histogram", fill="transparent")
ggMarginal(g, type = "histogram", fill="transparent")
g <- ggplot(dataset, aes(Month, Revenue)) +
geom_count() +
geom_smooth(method="lm", se=F)
ggMarginal(g, type = "histogram", fill="transparent")
pdf("Fig_4_2_Scatter.pdf")
pdf("Fig_4_2_Scatter.pdf")
pdf(file="Fig_4_2_Scatter.pdf")
ggMarginal(g, type = "histogram", fill="transparent")
pdf(file="Fig_4_2_Scatter.pdf")
pdf("Fig_4_2_Scatter.pdf")
g <- ggplot(dataset, aes(Month, Revenue)) +
geom_count() +
geom_smooth(method="lm", se=F)
ggMarginal(g, type = "histogram", fill="transparent")
dev.off()
par(opar.org)
opar.org <- par(no.readonly=TRUE) # Store original graphical parameter setting.
par(opar.org)
